version: '3'
services:
  nginx:
    restart: always
    depends_on:
      - api
      - client
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3080:80'
      
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432

  api:
    depends_on:
      - rabbitmq
      - postgres
    build:
      dockerfile: Dockerfile.dev
      context: ./PlayerOrder
    volumes:
      - /app/node_modules
      - ./PlayerOrder:/app
    environment:
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - AMQPRECEIVEURL=amqp://guest:guest@rabbitmq:5672
      
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
    stdin_open: true

  rabbitmq:
    image: rabbitmq:3-management
    hostname: my-rabbit
    volumes:
      - ./rabbitmq/etc/definitions.json:/etc/rabbitmq/definitions.json
      - ./rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
      - ./rabbitmq/logs:/var/log/rabbitmq/log
    ports:
      - 5672:5672
      - 15672:15672

  queue-worker:
    depends_on:
      - rabbitmq
      - postgres
    build:
      dockerfile: Dockerfile
      context: ./queue-worker
